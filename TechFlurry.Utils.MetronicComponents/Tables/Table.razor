@using Microsoft.AspNetCore.Components.Web.Virtualization
@typeparam TModel
@inherits TableBase<TModel>

@{
    var visibleColumns = Columns.Where(e => e.IsVisible).ToList();
}

<CascadingValue Value="this" Name="Table" TValue="TableBase<TModel>">
    <div class="card card-custom gutter-b">
        <div class="card-header">
            @if (!string.IsNullOrEmpty(TableTitle))
            {
                <div class="card-title">
                    <h3>@TableTitle</h3>
                </div>
            }
        </div>
        <div class="card-body">
            @{
                var borderStyle = string.Empty;
                if (BorderStyle != TableBorderStyle.None)
                {
                    borderStyle = " table-" + borderStyle.ToString().ToLower();
                }
                CssClass += borderStyle;
            }
            <table class="table @CssClass" id="@Id" @attributes="TableAttributes">
                @if (!string.IsNullOrEmpty(caption))
                {
                    <caption>
                        @caption
                        @if (SelectedItems.Any())
                        {
                            @(new MarkupString($" (Selected: {SelectedItems.Count})"))
                        }
                    </caption>
                }

                @{
                    var headerStyle = string.Empty;
                    if (HeaderStyle != TableHeaderStyle.None)
                    {
                        headerStyle = " thead-" + HeaderStyle.ToString().ToLower();
                    }
                }
                <thead class="@headerStyle">
                    <tr>
                        @if (ShowSerialNumbers)
                        {
                            <th scope="col">#</th>
                        }
                        @foreach (var column in visibleColumns)
                        {
                            var numeric = string.Empty;
                            if (column.TextAlignment == TextAlignment.Right)
                            {
                                numeric = "text-right";
                            }
                            else if (column.TextAlignment == TextAlignment.Center)
                            {
                                numeric = "text-center";
                            }
                            @if (column.HeaderTemplate is not null)
                            {
                                <th scope="col">@column.HeaderTemplate(string.IsNullOrEmpty(column.CustomTitle)?column.GetColumnVisualPropertyName():column.CustomTitle)</th>
                            }
                            else if (column.CustomTitle is not null)
                            {
                                <th scope="col" class="@numeric">@column.CustomTitle</th>
                            }
                            else
                            {
                                <th scope="col" class="@numeric">@column.GetColumnVisualPropertyName()</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (!Items.Any()  && ItemsProvider is null)
                    {
                        <p>@EmptyGridText</p>
                    }
                    else
                    {
                        @if (ItemsProvider is not null)
                        {
                            <Virtualize @ref="_virtualizer" ItemsProvider="LoadData" Context="item" OverscanCount="10">

                                <Row AllowRowSelection="AllowRowSelection" SerialNumber="item.SerialNumber" SelectedRowColor="SelectedRowColor" Columns="Columns" Item="item.DataRow" RowAttributes="RowAttributes" RowClickedEvent="OnRowClickedEvent" SelectedItems="SelectedItems">
                                </Row>
                            </Virtualize>
                        }
                        else
                        {
                            var srNo = 0;
                            @foreach (var item in Items)
                            {
                                ++srNo;
                                int? serialNumber = null;
                                if (ShowSerialNumbers)
                                {
                                    serialNumber = srNo;
                                }
                                <Row SerialNumber="serialNumber" AllowRowSelection="AllowRowSelection" SelectedRowColor="SelectedRowColor" Columns="Columns" Item="item" RowAttributes="RowAttributes" RowClickedEvent="OnRowClickedEvent" SelectedItems="SelectedItems">
                                </Row>
                            }
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>

    @ChildContent
</CascadingValue>


@code {
}
